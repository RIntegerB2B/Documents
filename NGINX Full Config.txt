server {
    listen 80;
    server_name www.rinteger.com rinteger.com;

    # redirects both www and non-www to https
    return 301 https://rinteger.com$request_uri;
}
server {
        #listen 80 default_server;
        #listen [::]:80 default_server;
        #client_max_body_size 200M;
        # SSL configuration
        #
         listen 443 ssl default_server;
         listen [::]:443 ssl default_server;
ssl_certificate     /home/ubuntu/keys/rinteger.com.crt;
   ssl_certificate_key /home/ubuntu/keys/rinteger.com.key;
client_max_body_size 200M;

        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /home/ubuntu/app/rinteger/rinteger;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name rinteger.com;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ /index.html;

        }
       location /.well-known/acme-challenge/XchkkyDyLhVrqXq68gRaQwczS8qRu-3DgmUxN2yGOmc {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                #try_files $uri $uri/ /index.html;
        }

        location /admin {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
              #  try_files $uri $uri/ /index.html;
                  proxy_pass http://127.0.0.1:91/;
                  proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        }
        location /admin/crm {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
              #  try_files $uri $uri/ /index.html;
                  proxy_pass http://127.0.0.1:92/;
                  proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        }




        location /adminservice/ {
             proxy_pass http://127.0.0.1:3012/;
          proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        }

        location /service/ {
             proxy_pass http://127.0.0.1:3011/;
          proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        }

        location /crmservice/ {
             proxy_pass http://127.0.0.1:3021/;
          proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        }



        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php7.0-cgi alone:
        #       fastcgi_pass 127.0.0.1:9000;
        #       # With php7.0-fpm:
        #       fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#

server {
        listen 91;
        listen [::]:91;

        server_name _;

        root /home/ubuntu/app/rinteger-admin/Rinteger-admin;
        index index.html;

        location / {
                try_files $uri $uri/ /index.html;
        }
        location /images/{
        }
}

server {
        listen 92;
        listen [::]:92;

        server_name _;

        root /home/ubuntu/app/rinteger-crm/rinteger-crm;
        index index.html;

        location / {
                try_files $uri $uri/ /index.html;
        }
        location /images/{
        }
}




sudo a2enmod ssl - enable SSL in apache
